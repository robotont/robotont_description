<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="robotont">
    <xacro:arg name="prefix" default=""/>
    <xacro:property name= "prefix" value="$(arg prefix)"/>
    <xacro:include filename="$(find robotont_description)/xacro/rim.urdf.xacro"/>
    <xacro:include filename="$(find robotont_description)/xacro/_d435.urdf.xacro"/>
    <xacro:property name="wheel_distance" value="0.146" />
    <xacro:property name="wheel_center_height" value="0.021" />
    <link name="${prefix}base_footprint"/>
    <link name="${prefix}base_link">
        <inertial>
            <mass value="3"/>
            <inertia
			ixx="0.00002035985530754"
			ixy="0"
			ixz="0"
			iyy="0.00002035985530754"
			iyz="0"
			izz="0.00003945961663220"
		/>
        </inertial>
        <visual>
            <geometry>
                <mesh scale="0.001 0.001 0.001" filename="package://robotont_description/meshes/body.stl"/>
            </geometry>
            <material name="base_material">
                <color rgba="1 1 1 0.8"/>
            </material>
            <origin rpy="0 0 ${pi/2}"  xyz="0 0 0"/>
        </visual>
        <collision>
            <geometry>
                <mesh scale=" 0.001 0.001 0.001" filename="package://robotont_description/meshes/simplebody.stl"/>
            </geometry>
            <origin rpy="${pi/2} 0 0"  xyz="0 0 0"/>
        </collision>
    </link>
    <joint
		name="${prefix}base_joint"
		type="fixed"
	>
        <parent link="${prefix}base_footprint" />
        <child link="${prefix}base_link" />
        <origin
			xyz="0 0 0.013"
			rpy="0 0 0" 
		/>
    </joint>
    <!-- Camera -->
    <!-- <link name="right_camera_boom"><visual><geometry><box size="0.005 0.16 0.01"/></geometry><origin rpy="0 0 0" xyz="0 0 0"/><material name="boom_material"><color rgba="1 1 1 0.7"/></material></visual><collision><geometry><box size="0.005 0.16 0.01"/></geometry><origin rpy="0 0 0" xyz="0 0 0"/></collision></link><joint
		name="right_camera_boom_joint"
		type="fixed"
	><parent link="base_link" /><child link="right_camera_boom" /><origin
			xyz="-0.05 0.145 -0.1"
			rpy="0 0 0" 
		/></joint><link name="left_camera_boom"><visual><geometry><box size="0.005 0.16 0.01"/></geometry><origin rpy="0 0 0" xyz="0 0 0"/><material name="boom_material"><color rgba="1 1 1 0.7"/></material></visual><collision><geometry><box size="0.005 0.16 0.01"/></geometry><origin rpy="0 0 0" xyz="0 0 0"/></collision></link><joint
		name="left_camera_boom_joint"
		type="fixed"
	><parent link="base_link" /><child link="left_camera_boom" /><origin
			xyz="0.05 0.145 -0.1"
			rpy="0 0 0" 
		/></joint><link name="camera_base"><visual><geometry><box size="0.1 0.02 0.005"/></geometry><origin rpy="0 0 0" xyz="0 0 0"/><material name="boom_material"><color rgba="1 1 1 0.7"/></material></visual></link><joint
		name="camera_boom_to_base_joint"
		type="fixed"
	><parent link="right_camera_boom" /><child link="camera_base" /><origin
			xyz="0.0475 0.07 0"
			rpy="0 0 0" 
		/></joint> -->
    <sensor_d435 parent="${prefix}base_link" prefix="${prefix}">
        <origin xyz="-0.12 0 0.21" rpy="0 0 0"/>
    </sensor_d435>
    <!-- <link name="camera_link"><origin rpy="0 0 0" xyz="0 0 0"/></link><joint
		name="camera_base_to_link_joint"
		type="fixed"
	><parent link="camera_base" /><child link="camera_link" /><origin
			xyz="0 0 0.011"
			rpy="0 0 0" 
		/></joint> -->
    <!-- Computer -->
    <link name="${prefix}computer_link">
        <visual>
            <geometry>
                <box size="0.11 0.11 0.04"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <material name="computer_material">
                <color rgba="0.1 0.1 0.1 1"/>
            </material>
        </visual>
    </link>
    <joint
		name="${prefix}computer_joint"
		type="fixed"
	>
        <parent link="${prefix}base_link" />
        <child link="${prefix}computer_link" />
        <origin
			xyz="-0.01 0 0.085"
			rpy="0 0 0" 
		/>
    </joint>
    <!-- Wheels -->
    <xacro:rim_macro
		name="back"
		color="0 0.3 0"
		angle="${3*pi/2}"
		wheel_distance = "${wheel_distance}"
		wheel_center_height = "${wheel_center_height}"
        prefix="${prefix}"
	/>
    <xacro:rim_macro
		name="right"
		color="0 0.3 0"
		angle="${-1/3*pi + pi/2}"
		wheel_distance = "${wheel_distance}"
		wheel_center_height = "${wheel_center_height}"
        prefix="${prefix}"

	/>
    <xacro:rim_macro
		name="left"
		color="0 0.3 0"
		angle="${1/3*pi + pi/2}"
		wheel_distance = "${wheel_distance}"
		wheel_center_height = "${wheel_center_height}"
        prefix="${prefix}"

	/>
    <!-- Initialize controller manager and odometry-->
    <!-- libgazebo_ros_planar_move.so -->
    <gazebo>
        <plugin name="robotont_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>/robotont/cmd_vel</commandTopic>
            <odometryTopic>/robotont/odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryRate>30.0</odometryRate>
            <robotBaseFrame>${prefix}base_footprint</robotBaseFrame>
        </plugin>
    </gazebo>
    <!-- Give materials to links -->
    <gazebo reference="${prefix}base_link">
        <material>Robotont/BlueishTransparent</material>
    </gazebo>
    <gazebo reference="${prefix}camera_link">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="${prefix}computer_link">
        <material>Gazebo/Black</material>
    </gazebo>
    <!-- Depth camera plugin -->
    <gazebo reference="${prefix}camera_link">
        <sensor type="depth" name="camera">
            <always_on>true</always_on>
            <update_rate>10.0</update_rate>
            <camera>
                <horizontal_fov>${90.0*pi/180.0}</horizontal_fov>
                <image>
                    <format>B8G8R8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>8.0</far>
                </clip>
            </camera>
            <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
                <robotNamespace>/</robotNamespace>
                <cameraName>camera</cameraName>
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <imageTopicName>color/image_raw</imageTopicName>
                <depthImageTopicName>depth/image_raw</depthImageTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
                <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
                <frameName>camera_depth_optical_frame</frameName>
                <baseline>0.1</baseline>
                <distortion_k1>0.0</distortion_k1>
                <distortion_k2>0.0</distortion_k2>
                <distortion_k3>0.0</distortion_k3>
                <distortion_t1>0.0</distortion_t1>
                <distortion_t2>0.0</distortion_t2>
                <pointCloudCutoff>0.4</pointCloudCutoff>
            </plugin>
        </sensor>
    </gazebo>
</robot>
